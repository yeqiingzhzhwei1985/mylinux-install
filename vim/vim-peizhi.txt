VIM 配置

基础配置
" ~/.vimrc

" 基本设置
set nocompatible        " 禁用 Vi 兼容模式
syntax on               " 语法高亮
filetype plugin indent on " 启用文件类型检测和插件

set encoding=utf-8      " 使用 UTF-8 编码
set fileencodings=utf-8,gbk " 自动检测文件编码
set number              " 显示行号
set relativenumber      " 相对行号（方便跳转）
set cursorline          " 高亮当前行
set showcmd             " 显示正在输入的命令
set wildmenu            " 命令行补全增强
set hlsearch            " 高亮搜索结果
set incsearch           " 输入时实时搜索
set ignorecase          " 搜索忽略大小写
set smartcase           " 如果包含大写字母，则区分大小写
set tabstop=4           " Tab 显示为 4 空格
set shiftwidth=4        " 自动缩进 4 空格
set expandtab           " Tab 转空格
set autoindent          " 自动缩进
set smartindent         " 智能缩进
set nowrap              " 不自动换行
set backspace=indent,eol,start " 退格键可删除缩进、换行符等
set mouse=a             " 启用鼠标支持
set clipboard=unnamed   " 共享系统剪贴板（需 +clipboard 支持）
set hidden              " 允许切换 buffer 而不保存
set nobackup            " 不生成备份文件
set noswapfile          " 不生成 swap 文件
set autoread            " 文件被外部修改时自动重新加载
set splitright          " 垂直分割时新窗口在右侧
set splitbelow          " 水平分割时新窗口在下侧
set termguicolors       " 启用真彩色（终端支持时）
set scrolloff=5         " 光标距离顶部/底部保留 5 行
set laststatus=2        " 总是显示状态栏
set updatetime=300      " 减少延迟（用于 GitGutter 等插件）
set shortmess+=c        " 减少补全提示干扰
set completeopt=menuone,noinsert,noselect " 补全优化

----------------------------------------------------------
插件管理（Vim-Plug）
-------------------------------------------------------
-# Linux/macOS
curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    ------------------------------------------------------

插件配置示例


call plug#begin('~/.vim/plugged')

" 主题
Plug 'morhetz/gruvbox'
Plug 'folke/tokyonight.nvim'

" 状态栏 & 标签栏
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

" 文件树
Plug 'preservim/nerdtree'

" 代码补全
Plug 'neoclide/coc.nvim', {'branch': 'release'}

" 语法高亮增强
Plug 'sheerun/vim-polyglot'

" Git 支持
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'

" 快速注释
Plug 'tpope/vim-commentary'

" 模糊搜索
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'

" 代码片段
Plug 'honza/vim-snippets'

" 自动括号匹配
Plug 'jiangmiao/auto-pairs'

" Markdown 预览
Plug 'iamcco/markdown-preview.nvim', { 'do': 'cd app && yarn install' }

" 其他实用插件
Plug 'mbbill/undotree'   " 撤销历史树
Plug 'tpope/vim-surround' " 快速操作包围符号
Plug 'Yggdroot/indentLine' " 缩进引导线

call plug#end()

--------------------------------------------------------------------------
安装插件
--------------------------------------------------------------------------
    在 ~/.vimrc 中添加插件后，重启 Vim。

    执行 :PlugInstall 安装插件。
-------------------------------------------------------------------------
常用快捷键优化
---------------------------------------------------------------------------
" 设置 Leader 键（默认为 \）
let mapleader = ","

" 快速保存 & 退出
nnoremap <leader>w :w<CR>
nnoremap <leader>q :q<CR>
nnoremap <leader>x :x<CR>

" 取消搜索高亮
nnoremap <silent> <leader>h :nohlsearch<CR>

" 快速切换窗口
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" 调整窗口大小
nnoremap <silent> <leader>+ :vertical resize +5<CR>
nnoremap <silent> <leader>- :vertical resize -5<CR>

" NERDTree 文件树
nnoremap <leader>n :NERDTreeToggle<CR>

" FZF 模糊搜索
nnoremap <leader>f :Files<CR>
nnoremap <leader>b :Buffers<CR>
nnoremap <leader>g :Rg<CR>

" Coc 补全快捷键
inoremap <silent><expr> <TAB> coc#pum#visible() ? coc#pum#confirm() : "\<TAB>"
inoremap <expr> <S-TAB> coc#pum#visible() ? coc#pum#prev(1) : "\<S-TAB>"

" 快速注释（vim-commentary）
nmap <leader>c gcc
vmap <leader>c gc

" 撤销历史树（undotree）
nnoremap <leader>u :UndotreeToggle<CR>

call plug#begin('~/.vim/plugged')

" 主题
Plug 'morhetz/gruvbox'
Plug 'folke/tokyonight.nvim'

" 状态栏 & 标签栏
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

" 文件树
Plug 'preservim/nerdtree'

" 代码补全
Plug 'neoclide/coc.nvim', {'branch': 'release'}

" 语法高亮增强
Plug 'sheerun/vim-polyglot'

" Git 支持
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'

" 快速注释
Plug 'tpope/vim-commentary'

" 模糊搜索
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'

" 代码片段
Plug 'honza/vim-snippets'

" 自动括号匹配
Plug 'jiangmiao/auto-pairs'

" Markdown 预览
Plug 'iamcco/markdown-preview.nvim', { 'do': 'cd app && yarn install' }

" 其他实用插件
Plug 'mbbill/undotree'   " 撤销历史树
Plug 'tpope/vim-surround' " 快速操作包围符号
Plug 'Yggdroot/indentLine' " 缩进引导线

call plug#end()
---------------------------------------------------------------------------
主题配置
--------------------------------------------------------------------------
" 启用主题
colorscheme gruvbox
set background=dark    " 深色模式
" set background=light " 浅色模式

" 透明背景（终端支持时）
hi Normal guibg=NONE ctermbg=NONE
-----------------------------------------------------------------------------
高级优化
-------------------------------------------------------------------------------
Coc.nvim 配置（智能补全）

" ~/.vim/coc-settings.json
{
  "languageserver": {
    "python": {
      "command": "python",
      "args": ["-m", "pylsp"],
      "filetypes": ["python"]
    },
    "rust": {
      "command": "rust-analyzer",
      "filetypes": ["rust"]
    }
  }
}

--------------------------------------------------------------------------------\
自动命令
---------------------------------------------------------------------------
" 保存时自动格式化（需 Coc 支持）
autocmd BufWritePre *.py,*.js,*.json call CocAction('format')

" 进入文件时自动定位到上次编辑位置
autocmd BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
------------------------------------------------------------------------------
检查 Vim 特性
------------------------------------------------------------------------------
vim --version | grep clipboard
如果显示 +clipboard，则支持系统剪贴板；否则需安装支持版本（如 vim-gtk）。
-----------------------------------------------------------------------------
完整配置托管
------------------------------------------------------------------------
git init ~/.vim
cd ~/.vim
git remote add origin <your-repo-url>
git add .vimrc
git commit -m "Initial Vim config"
git push -u origin main

