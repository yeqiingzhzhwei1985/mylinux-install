##############################################
##############################################
###################################天气查询-命令行
curl zh.wttr.in/kunming
curl zh.wttr.in/kunming?format=<1-4>
curl zh.wttr.in/kunming?1


###################################
###################################
###################################
两种启动管理软件:systemd-boot : grub2 
bootctl:systemd-boot
grub:grub2

#######################
#######################
##################fedora
fedora安装需要安装的基本软件:
gnome-tweaks ###gnome桌面的插件
gnome-Weather ###天气
gnome-clocks ##时钟
geany ###编成软件
thonny ###python软件
code  ##vscode
shotcut ##视频处理软件
shotwell ###图片管理软件
gimp ###图片处理软件
gnome-Maps ##地图
ncdu ###磁盘分析软件
vim
nano
nload ###网速测试工具
networkmanger  ###wifi管理工具
dhcpcd   ###自动获usb等硬件ip工具
htop  ##类似top
gnome-disk-utility  ###硬盘管理工具
Baobab ###磁盘分析工具
ncdu  ###磁盘占用分析软件
atop  ##比较简单的类似top
btop  ###最优秀的类top
stacer ###优秀的机器清理和查看软件
gcc 
g++
zig
python
gfortran
go
rust   ###curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
uv   ### curl -LsSf https://astral.sh/uv/install.sh | sh
pyenv   ### curl https://pyenv.run | bash
rustpython  ### cargo install rustpython 
pyrun
nvm
totem ###视频播放器-简洁明亮
snapshot ###gnome桌面的摄像头
sublime-text:{
sudo rpm -v --import https://download.sublimetext.com/sublimehq-rpm-pub.gpg
sudo dnf config-manager --add-repo https://download.sublimetext.com/rpm/stable/x86_64/sublime-text.repo
sudo dnf install sublime-text
}

firefox:{
下载:https://www.firefox.com.cn
解压

配置桌面
vim ~/.local/share/applications/firefox.desktop

输入:

mkdir -p ~/.local/share/applications/
cat << EOF > ~/.local/share/applications/firefox.desktop
[Desktop Entry]
Name=Firefox
Exec=/opt/firefox/firefox
Icon=/opt/firefox/browser/chrome/icons/default/default128.png
Terminal=false
Type=Application
Categories=Network;WebBrowser;
EOF

执行可执行权限:
chmod +x ~/.local/share/applications/firefox.desktop

更新系统快捷方式缓存
update-desktop-database ~/.local/share/applications/

将 Firefox 路径加入 PATH
echo 'export PATH="$PATH:/opt/firefox"' >> ~/.bashrc
source ~/.bashrc
}

######################################################
######################################################
######################################################

##############################git配置每次还系统
安装git
sudo apt install git 
sudo pacman -Syu git
sudo dnf install git

配置git-在系统中第一次使用(换了系统)
git config --global user.name "yeqiingzhzhwei"
git config --global user.email "1492882985@qq.com"

（可选）保存 GitHub 凭据，避免重复输入密码：
git config --global credential.helper store

克隆仓库
git clone https://github.com/yeqiingzhzhwei1985/mylinux-install.git

cd mylinux-install

##因为是首次所以需要配置ssh
生成SSH Key
ssh-keygen -t ed25519 -C "1492882985@qq.com"

##将公匙添加到github,因为每个系统对应一个公匙,所以只要换了系统,必须执行本步骤,将公匙重新提交到github上
cat ~/.ssh/id_ed25519.pub
##复制输出内容，进入 GitHub Settings → SSH and GPG keys → New SSH key 并粘贴。

##测试 SSH 连接
ssh -T git@github.com
###看到 Hi username! You've successfully authenticated 表示成功。

###修改远程仓库地址为 SSH
git remote set-url origin git@github.com:yeqiingzhzhwei1985/mylinux-install.git
####验证
git remote -v 
# 应显示：
# origin  git@github.com:your_username/mylinux-install.git (fetch)
# origin  git@github.com:your_username/mylinux-install.git (push)
# 测试连接
# 应显示：
# origin  git@github.com:your_username/mylinux-install.git (fetch)
# origin  git@github.com:your_username/mylinux-install.git (push)

###修改本地代码

###添加修改到本地缓存区
git add .
#添加特定文件,如果有
git add 文件名1 文件名2 ...
###提交更改
git commit -m "描述你的修改内容"
###推送分支到github
git push origin 分子名
####例如
git push origin main
###如果本地分支已关联远程分支（通过 git branch --set-upstream-to），可直接：
####本地第一次推送本地分支,使用-u或者--set-upstream
git push -u origin 分子名
或者
git push --set-upstream origin 分子名
###关联以后就可以直接:
git push



########################################################
#deepin25安装
#deepin25采用回滚机制,所以很难安装很多软件通过命令行,需要通过自带的软件仓库
#安装自身系统一开始就需要14GB ,如果升级,系统会备份系统,我第一次备份就占了5GB左右
#所以对硬盘空间的需求很大,安装完成基本的开发环境基本就需要40GB
#安装过程中,自己设置分区:/ /boot /boo/efi /swap
#swap分区至少是内存的1倍,这是deepin自己的最少设置,通常/boot/efi分区设置500MB以上才够用
#最好是设置1GB,/boot分区deepin最低要求是4GB无法修改.
#
#因为设置了安全机制,会有ostree分区等,/usr /etc很多配置文件是不能修改的,所以通过命令行安装
#软件很多都不能;通过自带仓库软件安装的软件就不能通过命令行启动.比如terminator只能通过自己的
#仓库安装,命令行安装很痛苦,没有成功;如果卸载自带的一些软件,可能会默认卸载一些依赖,造成其他
#软件不能正常使用,比如:卸载自带浏览器等会出向控制中心不能正常使用打开,teacer也不能正常使用
#
